<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>ToolPopup</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>A pop up which the user can open from the Shell's tool pane. Generally, the starting point would be an icon.
For this pop up, buttons can be defined with any text; therefore, it has the same purpose and similar look like any common dialog box.
A ToolPopup can have any content. Depending on the application type and design, the structure of the texts and input fields can be for
example form-like.</documentation>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property group="Misc" type="sap.ui.core/string" name="title">
            <documentation>The title displayed in the pop up window</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/URI" name="icon">
            <documentation>This property is relevant for Shell-use:
The URL to the icon displayed in the tool area which is used to open the ToolPopup. The recommended size is 32x32px, including some transparent border. Therefore, the content will cover about 20x20px.</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/URI" name="iconHover">
            <documentation>This property is relevant for Shell-use:
The URL to the icon in hover state, displayed in the tool area which is used to open the pop up.</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/URI" name="iconSelected">
            <documentation>This property is relevant for Shell-use:
The URL to the icon in selected state displayed in the tool area which is used to open the pop up. If no selected icon is given, the hover icon is used.</documentation>
        </property>
        <property group="Behavior" defaultValue="false" type="sap.ui.core/boolean" name="modal">
            <documentation>Whether the popup is modal and blocks any user-interaction with controls in the background.
Changing this property while the ToolPopup is open is not allowed (and currently has no effect)
Please don't use &quot;modal&quot; and &quot;autoclose&quot; at the same time. In this case a warning will be prompted to the console and &quot;autoclose&quot; won't be used.</documentation>
        </property>
        <property since="1.11.1" group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="inverted">
            <documentation>Specifies whether the ToolPopup has a dark or bright background. If set to true the background and borders will be dark. If false this stuff will be bright.
This property only has an effect for the GoldReflection-theme.</documentation>
        </property>
        <property since="1.13.2" group="Misc" defaultValue="false" type="sap.ui.core/boolean" name="autoClose">
            <documentation>This property tells the ToolPopup to close itself if the ToolPopup looses the focus. If the user e.g. clicks outside of the ToolPopup it will be closed. Please don't use &quot;modal&quot; and &quot;autoclose&quot; at the same time. In this case a warning will be prompted to the console and &quot;autoclose&quot; won't be used.</documentation>
        </property>
        <property since="1.13.2" group="Misc" type="sap.ui.core/CSSSize" name="maxHeight">
            <documentation>This property can be used to force a maximum height of the ToolPopup in pixels. If the ToolPopup content is higher than the ToolPopup, the content will be scrollable.</documentation>
        </property>
        <property since="1.15.0" group="Misc" type="sap.ui.core/CSSSize" name="maxWidth">
            <documentation>This property can be used to force a maximum width of the ToolPopup in pixels.</documentation>
        </property>
        <property since="1.19.0" group="Misc" defaultValue="400" type="sap.ui.core/int" name="openDuration">
            <documentation>Time in milliseconds for the open animation.</documentation>
        </property>
        <property since="1.19.0" group="Misc" defaultValue="400" type="sap.ui.core/int" name="closeDuration">
            <documentation>Time in milliseconds for the close animation.</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="open">
            <documentation>Event is fired when the pop up opens</documentation>
        </event>
        <event allowPreventDefault="true" name="close">
            <documentation>Event is fired when the pop up closes because the user pressed Escape or the ToolPopup Button in the Shell. This is called before the closing animation.</documentation>
        </event>
        <event allowPreventDefault="false" name="enter">
            <documentation>Event is fired whenever the user clicks the Enter or the Return key inside the pop up</documentation>
            <parameters>
                <parameter type="sap.ui.core/object" name="originalEvent">
                    <documentation>The onsapenter event, received by the pop up</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="originalSrcControl">
                    <documentation>The control that was focused when the user pressed the Enter key (may be null)</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="iconChanged">
            <documentation>Event is fired when one of the icon properties is modified (Note: The icon is not rendered by the ToolPopup).
To be used by other controls which want to update the icon in their UI.</documentation>
        </event>
        <event allowPreventDefault="false" name="closed">
            <documentation>This event is fired after the ToolPopup has finished its closing animation. It is called for EVERY close, regardless of whether the user has triggered the close or whether the ToolPopup was closed via API call.</documentation>
        </event>
        <event allowPreventDefault="false" since="1.19.0" name="opened">
            <documentation>Event is being fired after the ToolPopup has been opened.</documentation>
        </event>
    </events>
    <aggregations default="content">
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="buttons">
            <documentation>The buttons to appear in the pop up</documentation>
        </aggregation>
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="content">
            <documentation>The content of the pop up</documentation>
        </aggregation>
    </aggregations>
    <associations>
        <association cardinality="0..1" type="sap.ui.core/Control" name="initialFocus">
            <documentation>Defines the control that shall get the focus when the ToolPopup is opened.</documentation>
        </association>
        <association cardinality="0..1" type="sap.ui.core/Control" name="opener">
            <documentation>This property is relevant for stand-alone-use:
This association needs to be set if the ToolPopup should not be opened by/with the Shell. This association contains the instance of the control that assigns the ToolPopup's position.</documentation>
        </association>
        <association since="1.20.1" cardinality="0..1" type="sap.ui.core/Control" name="defaultButton">
            <documentation>Defines one of the buttons that have been provided via button aggregation to be the default button. This default button is initially selected, if no control is set via the initialFocus association explicitly. The default button is activated when Enter is pressed in the context of the dialog and when the currently selected element does not handle the Enter event itself.</documentation>
        </association>
    </associations>
    <methods>
        <method type="sap.ui.core/boolean" name="isOpen">
            <documentation>Returns whether the pop up is currently open</documentation>
        </method>
        <method type="sap.ui.core/void" name="close">
            <documentation>Closes the pop up. Can be called by the Shell when the pop up's button is clicked again; or by the application
when the interaction in the pop up has been completed or canceled.</documentation>
            <parameters>
                <parameter type="sap.ui.core/boolean" name="preventRestoreFocus">
                    <documentation>If set, the focus is NOT restored to the element that had the focus before the ToolPopup was opened. This makes sense when the ToolPopup is closed programmatically from a different area of the application (outside the ToolPopup) and the focus should not move aways from that place.</documentation>
                </parameter>
            </parameters>
        </method>
        <method since="1.13.1" type="sap.ui.core/boolean" name="getEnabled">
            <documentation>Whether the ToolPopup is currently enabled or not.

Applications can't control the enabled state via a property. A ToolPopup is implicitly
enabled depending on its &lt;code&gt;openStatey&lt;/code&gt;. Descendant controls that honor the
enabled state of their ancestors will appear disabled after the ToolPopup is closed.</documentation>
            <developmentState since="1.13.1" state="experimental">Whether a dialog is regarded as &quot;enabled&quot; during the state transitions
(OPENING, CLOSING) is not fully decided. Currently, it is enabled during the OPENING phase
and disabled during the CLOSING phase. The only potential change would be to treat the
OPENING phase as disabled as well. Applications should be prepared to receive events from
&quot;enabled&quot; controls after they called open() on the dialog until close() is called on it.
If the mentioned potential change should happen, the dialog will become enabled only
after the transition to OPEN. Events from &quot;enabled&quot; children then can still only arrive
between open() and close(), so applications that obey the previous rule should continue
to work. Only end users or code that explicitly triggers pseudo user events would notice
a difference. &lt;br&gt;
A second aspect that might change is the visual behavior of the content: during the CLOSING
phase it 'looks' enabled but in fact it is already disabled. This avoids unnecessary redraws
for content that becomes hidden soon. Should this show to be confusing for end users, it might
be changed.</developmentState>
        </method>
        <method name="setPosition">
            <documentation>Sets the position of the pop up, the same parameters as for sap.ui.core.Popup can be used.</documentation>
        </method>
        <method since="1.19.0" name="addFocusableArea">
            <documentation>Adds an ID to the Popup that should be focusable as well when using 'autoclose'.
Chaining is only possible if a valid type (string) is given.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="iD">
                    <documentation>Id of the corresponding element that should be focusable as well</documentation>
                </parameter>
            </parameters>
        </method>
        <method since="1.19.0" name="removeFocusableArea">
            <documentation>Removes an ID to the Popup that should be focusable as well when using 'autoclose'.
Chaining is only possible if a valid type (string) is given.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="iD">
                    <documentation>of the corresponding element</documentation>
                </parameter>
            </parameters>
        </method>
        <method name="open">
            <documentation>Opens the pop up.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="my">
                    <documentation>The ToolPopup's content reference position for docking. This value is optional if the position of the ToolPopup is set via 'setPosition'.</documentation>
                </parameter>
                <parameter type="sap.ui.core/string" name="at">
                    <documentation>The &quot;of&quot; element's reference point for docking to. This value is optional if the position of the ToolPopup is set via 'setPosition'.</documentation>
                </parameter>
            </parameters>
        </method>
    </methods>
</control>
